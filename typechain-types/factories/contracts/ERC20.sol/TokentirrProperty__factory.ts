/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokentirrProperty,
  TokentirrPropertyInterface,
} from "../../../contracts/ERC20.sol/TokentirrProperty";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StartingSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601181526020017f546f6b656e7469727250726f70657274790000000000000000000000000000008152506040518060400160405280600581526020017f5054495252000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b6118e380620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063a9059cbb11610066578063a9059cbb146102b1578063b7b0422d146102e1578063dd62ed3e146102fd578063f2fde38b1461032d57610100565b80638da5cb5b1461022957806395d89b4114610247578063a0712d6814610265578063a457c2d71461028157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610349565b60405161011a9190610fdc565b60405180910390f35b61013d60048036038101906101389190611097565b6103db565b60405161014a91906110f2565b60405180910390f35b61015b6103fe565b604051610168919061111c565b60405180910390f35b61018b60048036038101906101869190611137565b610408565b60405161019891906110f2565b60405180910390f35b6101a9610437565b6040516101b691906111a6565b60405180910390f35b6101d960048036038101906101d49190611097565b610440565b6040516101e691906110f2565b60405180910390f35b610209600480360381019061020491906111c1565b610477565b604051610216919061111c565b60405180910390f35b6102276104bf565b005b6102316104d3565b60405161023e91906111fd565b60405180910390f35b61024f6104fd565b60405161025c9190610fdc565b60405180910390f35b61027f600480360381019061027a9190611218565b61058f565b005b61029b60048036038101906102969190611097565b6105a4565b6040516102a891906110f2565b60405180910390f35b6102cb60048036038101906102c69190611097565b61061b565b6040516102d891906110f2565b60405180910390f35b6102fb60048036038101906102f69190611218565b610647565b005b61031760048036038101906103129190611245565b6106aa565b604051610324919061111c565b60405180910390f35b610347600480360381019061034291906111c1565b610731565b005b606060038054610358906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610384906112b4565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b6000806103e66107b5565b90506103f38185856107bd565b600191505092915050565b6000600254905090565b6000806104136107b5565b9050610420858285610988565b61042b858585610a14565b60019150509392505050565b60006012905090565b60008061044b6107b5565b905061046c81858561045d85896106aa565b6104679190611315565b6107bd565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104c7610c95565b6104d16000610d13565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461050c906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906112b4565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b5050505050905090565b610597610c95565b6105a13382610dd9565b50565b6000806105af6107b5565b905060006105bd82866106aa565b905083811015610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f9906113dd565b60405180910390fd5b61060f82868684036107bd565b60019250505092915050565b6000610625610c95565b600061062f6107b5565b905061063c818585610a14565b600191505092915050565b61064f610c95565b3373ffffffffffffffffffffffffffffffffffffffff167f6ab6d63e21496fded9b922262ef5085172183ac71a26da8e15fdd4ee16e1a6a282604051610695919061111c565b60405180910390a26106a73382610dd9565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610739610c95565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a09061146f565b60405180910390fd5b6107b281610d13565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490611501565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611593565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161097b919061111c565b60405180910390a3505050565b600061099484846106aa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0e5781811015610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f7906115ff565b60405180910390fd5b610a0d84848484036107bd565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b90611691565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90611723565b60405180910390fd5b610aff838383610f39565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c906117b5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c189190611315565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7c919061111c565b60405180910390a3610c8f848484610f3e565b50505050565b610c9d6107b5565b73ffffffffffffffffffffffffffffffffffffffff16610cbb6104d3565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0890611821565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e409061188d565b60405180910390fd5b610e5560008383610f39565b8060026000828254610e679190611315565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ebc9190611315565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f21919061111c565b60405180910390a3610f3560008383610f3e565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f7d578082015181840152602081019050610f62565b83811115610f8c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fae82610f43565b610fb88185610f4e565b9350610fc8818560208601610f5f565b610fd181610f92565b840191505092915050565b60006020820190508181036000830152610ff68184610fa3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102e82611003565b9050919050565b61103e81611023565b811461104957600080fd5b50565b60008135905061105b81611035565b92915050565b6000819050919050565b61107481611061565b811461107f57600080fd5b50565b6000813590506110918161106b565b92915050565b600080604083850312156110ae576110ad610ffe565b5b60006110bc8582860161104c565b92505060206110cd85828601611082565b9150509250929050565b60008115159050919050565b6110ec816110d7565b82525050565b600060208201905061110760008301846110e3565b92915050565b61111681611061565b82525050565b6000602082019050611131600083018461110d565b92915050565b6000806000606084860312156111505761114f610ffe565b5b600061115e8682870161104c565b935050602061116f8682870161104c565b925050604061118086828701611082565b9150509250925092565b600060ff82169050919050565b6111a08161118a565b82525050565b60006020820190506111bb6000830184611197565b92915050565b6000602082840312156111d7576111d6610ffe565b5b60006111e58482850161104c565b91505092915050565b6111f781611023565b82525050565b600060208201905061121260008301846111ee565b92915050565b60006020828403121561122e5761122d610ffe565b5b600061123c84828501611082565b91505092915050565b6000806040838503121561125c5761125b610ffe565b5b600061126a8582860161104c565b925050602061127b8582860161104c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112cc57607f821691505b602082108114156112e0576112df611285565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132082611061565b915061132b83611061565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113605761135f6112e6565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113c7602583610f4e565b91506113d28261136b565b604082019050919050565b600060208201905081810360008301526113f6816113ba565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611459602683610f4e565b9150611464826113fd565b604082019050919050565b600060208201905081810360008301526114888161144c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114eb602483610f4e565b91506114f68261148f565b604082019050919050565b6000602082019050818103600083015261151a816114de565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061157d602283610f4e565b915061158882611521565b604082019050919050565b600060208201905081810360008301526115ac81611570565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006115e9601d83610f4e565b91506115f4826115b3565b602082019050919050565b60006020820190508181036000830152611618816115dc565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061167b602583610f4e565b91506116868261161f565b604082019050919050565b600060208201905081810360008301526116aa8161166e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061170d602383610f4e565b9150611718826116b1565b604082019050919050565b6000602082019050818103600083015261173c81611700565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061179f602683610f4e565b91506117aa82611743565b604082019050919050565b600060208201905081810360008301526117ce81611792565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061180b602083610f4e565b9150611816826117d5565b602082019050919050565b6000602082019050818103600083015261183a816117fe565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611877601f83610f4e565b915061188282611841565b602082019050919050565b600060208201905081810360008301526118a68161186a565b905091905056fea26469706673582212207871397fad9be91c8e1e0fc9804d93690417d4a8aaf75d2025636fed38c2beaf64736f6c63430008090033";

type TokentirrPropertyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokentirrPropertyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokentirrProperty__factory extends ContractFactory {
  constructor(...args: TokentirrPropertyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokentirrProperty> {
    return super.deploy(overrides || {}) as Promise<TokentirrProperty>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokentirrProperty {
    return super.attach(address) as TokentirrProperty;
  }
  override connect(signer: Signer): TokentirrProperty__factory {
    return super.connect(signer) as TokentirrProperty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokentirrPropertyInterface {
    return new utils.Interface(_abi) as TokentirrPropertyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokentirrProperty {
    return new Contract(address, _abi, signerOrProvider) as TokentirrProperty;
  }
}
